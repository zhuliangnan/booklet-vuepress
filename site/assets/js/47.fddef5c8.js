(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{556:function(t,s,a){"use strict";a.r(s);var n=a(7),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"常量和类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量和类型转换"}},[t._v("#")]),t._v(" 常量和类型转换")]),t._v(" "),a("h2",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("%d")])]),t._v(" "),a("th",[a("strong",[t._v("十进制整数")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("%x,\t%o,\t%b")])]),t._v(" "),a("td",[a("strong",[t._v("十六进制，八进制，二进制整数。")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%f,\t%g,\t%e")])]),t._v(" "),a("td",[a("strong",[t._v("浮点数：\t3.141593\t3.141592653589793\t3.141593e+00")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%t")])]),t._v(" "),a("td",[a("strong",[t._v("布尔：true或false")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%c")])]),t._v(" "),a("td",[a("strong",[t._v("字符（rune）\t(Unicode码点)")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%s")])]),t._v(" "),a("td",[a("strong",[t._v("字符串")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%q")])]),t._v(" "),a("td",[a("strong",[t._v("带双引号的字符串\"abc\"或带单引号的字符'c'")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%v")])]),t._v(" "),a("td",[a("strong",[t._v("变量的自然形式（natural\tformat）")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%T")])]),t._v(" "),a("td",[a("strong",[t._v("变量的类型")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("%%")])]),t._v(" "),a("td",[a("strong",[t._v("字面上的百分号标志（无操作数）")])])])])]),t._v(" "),a("h2",{attrs:{id:"常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("常量就是不可变的变量,值得注意的是--常量表达式的值在"),a("strong",[t._v("编译期")]),t._v("计算，而不是在运行期。"),a("strong",[t._v("每种常量的潜在类型都是基础类型")]),t._v("： boolean、string或数字")])]),t._v(" "),a("p",[t._v("定义方式")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\tpi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14159")]),t._v("\n")])])]),a("p",[t._v("和变量声明一样，可以批量声明多个常量；这比较适合声明一组相关的常量")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("## 约定常量全大写表示\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tSTR"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is go"')]),t._v("\n\tPI"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415926535897932445")]),t._v("\n\tFLAG"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"iota常量生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iota常量生成器"}},[t._v("#")]),t._v(" iota常量生成器")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("常量声明可以使用"),a("strong",[t._v("iota常量生成器")]),t._v("初始化，它用于生成一组以相似规则初始化的常量，但是不 用每行都写一遍初始化表达式。在一个const声明语句中，在第一个声明的常量所在的行， "),a("strong",[t._v("iota将会被置为0")]),t._v("，然后在"),a("strong",[t._v("每一个有常量声明")]),t._v("的行"),a("strong",[t._v("加一")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("下面是来自time包的例子，它首先定义了一个Weekday命名类型，然后为一周的每天定义了 一个常量，从周日0开始。在其它编程语言中，这种类型一般被称为枚举类型。")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Weekday "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tSunday Weekday "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("                \n\tMonday                \n\tTuesday               \n\tWednesday                \n\tThursday                \n\tFriday                \n\tSaturday\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("## 这里"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("代表float类型有"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("比特位 \nGo语言支持两种浮点型 数："),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v(" 和 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" aInt "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般用这种方式强制转")]),t._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"转float64 %f  \\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"转string %v  \\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strconv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Itoa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"转float64 %f  \\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n输出\n转"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17.000000")]),t._v("  \n转"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("  \n转"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17.000000")]),t._v("   \n")])])]),a("p",[t._v("各种类型转字符串")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("resString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sprintf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d %v %v"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coding3min"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n输出\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" coding3min "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("string 和 bytes 的互相转换")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string  to bytes")]),t._v("\nresBytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"asdfasdf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bytes to string")]),t._v("\nresString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resBytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n输出\nasdfasdf\n")])])]),a("p",[a("strong",[t._v("如果有什么问题 欢迎在下面留言")])]),t._v(" "),a("p",[t._v("-----真假的界限本来就很模糊,世间万物皆信息,能被修改的东西,本身就没有纠结真假的意义")])])}),[],!1,null,null,null);s.default=r.exports}}]);