(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{504:function(v,_,s){"use strict";s.r(_);var e=s(7),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h2",{attrs:{id:"哨兵集群-哨兵挂了-主从库还能切换吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哨兵集群-哨兵挂了-主从库还能切换吗"}},[v._v("#")]),v._v(" 哨兵集群：哨兵挂了，主从库还能切换吗？")]),v._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),s("p",[v._v("实际上，一旦多个实例组成了"),s("code",[v._v("哨兵集群")]),v._v("，即使有"),s("code",[v._v("哨兵实例出现故障挂掉了")]),v._v("，其他哨兵还能"),s("code",[v._v("继续协作完成主从库切换的工作")]),v._v("，包括判定主库是不是处于下线状态，选择新主库，以及"),s("code",[v._v("通知从库和客户端")]),v._v("。")])]),v._v(" "),s("p",[v._v("如果你部署过哨兵集群的话就会知道，在配置哨兵的信息时，我们只需要用到下面的这个配置项，设置主库的 IP 和端口，"),s("code",[v._v("并没有配置其他哨兵的连接信息")]),v._v("。")]),v._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[v._v("sentinel monitor <master-name> <ip> <redis-port> <quorum> \n")])])]),s("p",[s("code",[v._v("思考")]),v._v("：这些哨兵实例既然都不知道彼此的地址，又是怎么组成集群的呢？")]),v._v(" "),s("h3",{attrs:{id:"基于-pub-sub-发布-订阅-机制的哨兵集群组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于-pub-sub-发布-订阅-机制的哨兵集群组成"}},[v._v("#")]),v._v(" 基于 pub/sub(发布/订阅) 机制的哨兵集群组成")]),v._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),s("p",[v._v("哨兵之间怎么知道彼此的地址端口?")]),v._v(" "),s("p",[s("code",[v._v("redis的发布/订阅机制")]),v._v("，每个哨兵都把自己的信息发送给主库，然后从主库订阅其他哨兵的消息，这样就可以互相知道其他哨兵的地址了")]),v._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),s("p",[s("code",[v._v("思考")]),v._v("：怎么保证后面上报的能够活得到之前redis哨兵注册的信息？")]),v._v(" "),s("p",[v._v("redis哨兵是"),s("code",[v._v("定时发布")]),v._v("自己的信息到 "),s("code",[v._v("master+slave")]),v._v(" 的 "),s("code",[v._v("__sentinel__:hello")]),v._v(" 管道(频道)，同时也会订阅 "),s("code",[v._v("master+slave")]),v._v("的 "),s("code",[v._v("__sentinel__:hello")]),v._v(" 管道(频道)，这样redis哨兵就可以彼此感知到对方的存在")]),v._v(" "),s("p",[v._v("哨兵集群的组成示意图")]),v._v(" "),s("p",[s("img",{attrs:{src:"/redis/base/ca42698128aa4c8a374efbc575ea22b1-16327335832729.jpg",alt:"img"}})]),v._v(" "),s("h3",{attrs:{id:"哨兵是如何知道从库的-ip-地址和端口的呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哨兵是如何知道从库的-ip-地址和端口的呢"}},[v._v("#")]),v._v(" 哨兵是如何知道从库的 IP 地址和端口的呢？")]),v._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),s("p",[v._v("哨兵"),s("code",[v._v("向主库发送INFO命令")]),v._v("，主库接收到命令后，就"),s("code",[v._v("把从库列表返回给哨兵")]),v._v("，因此哨兵就可以与每个从库建立连接，实现监控。")])])])]),v._v(" "),s("p",[v._v("哨兵与从库建立连接示意图")]),v._v(" "),s("p",[s("img",{attrs:{src:"/redis/base/88fdc68eb94c44efbdf7357260091de0.jpg",alt:"img"}})]),v._v(" "),s("h3",{attrs:{id:"基于-pub-sub-机制的客户端事件通知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于-pub-sub-机制的客户端事件通知"}},[v._v("#")]),v._v(" 基于 pub/sub 机制的客户端事件通知")]),v._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),s("p",[v._v("主从库切换后，客户端也需要知道新主库的连接信息，才能向新主库发送请求操作。所以，哨兵"),s("code",[v._v("还需要完成把新主库的信息告诉客户端这个任务")]),v._v("。")]),v._v(" "),s("p",[v._v("而且，在实际使用哨兵时，我们有时会遇到这样的问题：如何在客户端通过监控了解哨兵进行主从切换的过程呢？比如说，主从切换进行到哪一步了？这其实就是要求，客户端能够获取到哨兵集群在监控、选主、切换这个过程中发生的各种事件。")]),v._v(" "),s("p",[v._v("从本质上说，哨兵就是一个运行在特定模式下的 "),s("code",[v._v("Redis 实例")]),v._v("，只不过它并不服务请求操作，"),s("code",[v._v("只是完成监控、选主和通知的任务")]),v._v("。所以，每个哨兵实例"),s("code",[v._v("也提供 pub/sub 机制")]),v._v("，"),s("code",[v._v("客户端")]),v._v("可以"),s("code",[v._v("从哨兵订阅消息")]),v._v("。")])]),v._v(" "),s("p",[v._v("相关频道")]),v._v(" "),s("p",[s("img",{attrs:{src:"/redis/base/4e9665694a9565abbce1a63cf111f725.jpg",alt:"img"}})]),v._v(" "),s("p",[v._v("知道了这些频道之后，你就可以"),s("code",[v._v("让客户端从哨兵这里订阅消息")]),v._v("了。")]),v._v(" "),s("p",[v._v("具体的操作步骤是，客户端读取哨兵的配置文件后，可以获得哨兵的地址和端口，和哨兵建立网络连接。然后，我们可以在客户端执行订阅命令，来获取不同的事件消息。")]),v._v(" "),s("p",[v._v("举个例子，你可以执行如下命令，来订阅“所有实例进入客观下线状态的事件”：")]),v._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[v._v("SUBSCRIBE +odown\n")])])]),s("p",[v._v("当然，你也可以执行如下命令，订阅所有的事件：")]),v._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[v._v("PSUBSCRIBE  *\n")])])]),s("p",[s("code",[v._v("当哨兵把新主库选择出来后")]),v._v("，"),s("code",[v._v("客户端")]),v._v("就会看到下面的 "),s("code",[v._v("switch-master")]),v._v("事件。")]),v._v(" "),s("p",[v._v("这个事件表示主库已经切换了，新主库的 IP 地址和端口信息已经有了。这个时候，客户端就可以用这里面的新主库地址和端口进行通信了。")]),v._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[v._v("switch-master <master name> <oldip> <oldport> <newip> <newport>\n")])])]),s("p",[v._v("有了这些事件通知，客户端不仅可以在主从切换后得到新主库的连接信息，还可以监控到主从库切换过程中发生的各个重要事件。这样，客户端就可以知道主从切换进行到哪一步了，有助于了解切换进度")]),v._v(" "),s("h3",{attrs:{id:"由哪个哨兵执行主从切换-leader选举"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由哪个哨兵执行主从切换-leader选举"}},[v._v("#")]),v._v(" 由哪个哨兵执行主从切换？(Leader选举)")]),v._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),s("p",[v._v("具体由哪个哨兵执行主从切换的过程也需要进行投票选举")])]),v._v(" "),s("p",[v._v("任何一个实例"),s("code",[v._v("只要自身判断主库“主观下线”后，就会给其他实例发送")]),v._v(" "),s("code",[v._v("is-master-down-by-addr")]),v._v("命令。接着，其他实例会根据自己和主库的连接情况，做出 Y 或 N 的响应，Y 相当于赞成票，N 相当于反对票。")]),v._v(" "),s("p",[s("img",{attrs:{src:"/redis/base/e0832d432c14c98066a94e0ef86af384.jpg",alt:"img"}})]),v._v(" "),s("p",[v._v("一个哨兵"),s("code",[v._v("获得了仲裁所需的赞成票数")]),v._v("后，就可以"),s("code",[v._v("标记主库为“客观下线”")])]),v._v(" "),s("p",[v._v("这个所需的赞成票数是通过哨兵配置文件中的 "),s("code",[v._v("quorum")]),v._v(" 配置项设定的。")]),v._v(" "),s("p",[s("code",[v._v("例如")]),v._v("，现在有 5 个哨兵，quorum 配置的是 3，那么，一个哨兵需要 3 张赞成票，就可以标记主库为“客观下线”了。这 3 张赞成票包括哨兵自己的一张赞成票和另外两个哨兵的赞成票。")]),v._v(" "),s("h4",{attrs:{id:"leader选举"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#leader选举"}},[v._v("#")]),v._v(" Leader选举")]),v._v(" "),s("p",[v._v("此时，这个哨兵就可以再给其他哨兵发送命令，表明"),s("code",[v._v("希望由自己来执行主从切换")]),v._v("，并让所有其他哨兵进行投票。这个投票过程称为“Leader 选举”。因为最终执行主从切换的哨兵称为 Leader，投票过程就是确定 Leader。")]),v._v(" "),s("p",[v._v("在投票过程中，任何一个想成为 Leader 的哨兵，要满足两个条件：")]),v._v(" "),s("ol",[s("li",[v._v("拿到半数以上的赞成票")]),v._v(" "),s("li",[v._v("拿到的票数同时还需要大于等于哨兵配置文件中的 quorum 值。")])]),v._v(" "),s("p",[s("img",{attrs:{src:"/redis/base/5f6ceeb9337e158cc759e23c0f375fd9.jpg",alt:"img"}})]),v._v(" "),s("p",[v._v("哨兵选Leader失败的话，会等待一段之间(哨兵故障转移超时时间的 2 倍)，再重新选举.")]),v._v(" "),s("p",[v._v("这是因为，哨兵集群能够进行成功投票，很大程度上依赖于选举命令的"),s("code",[v._v("正常网络传播")]),v._v("。")]),v._v(" "),s("p",[v._v("如果网络"),s("code",[v._v("压力较大")]),v._v("或有"),s("code",[v._v("短时堵塞")]),v._v("，就可能导致"),s("code",[v._v("没有一个哨兵能拿到半数以上的赞成票")]),v._v("。所以，等到"),s("code",[v._v("网络拥塞好转之后")]),v._v("，再进行投票选举，成功的概率就会增加。")]),v._v(" "),s("p",[v._v("注意： 如果哨兵集群只有 2 个实例，此时，一个哨兵要想成为 Leader，必须获得 2 票，而不是 1 票。所以，如果有个哨兵挂掉了，那么，此时的集群是无法进行主从库切换的。因此，"),s("code",[v._v("通常我们至少会配置 3 个哨兵实例")]),v._v("。这一点很重要，你在实际应用时可不能忽略了。")]),v._v(" "),s("p",[s("code",[v._v("经验")]),v._v(": "),s("code",[v._v("要保证所有哨兵实例的配置是一致的")]),v._v("，尤其是主观下线的判断值 "),s("code",[v._v("down-after-milliseconds")]),v._v("。我们曾经就踩过一个“坑”。当时，在我们的项目中，因为这个值在不同的哨兵实例上配置不一致，导致哨兵集群一直没有对有故障的主库形成共识，也就没有及时切换主库，最终的结果就是集群服务不稳定。所以，你一定不要忽略这条看似简单的经验。")]),v._v(" "),s("h3",{attrs:{id:"提问-1主4从-5个哨兵-哨兵配置quorum为2-如果3个哨兵故障-当主库宕机时-哨兵能否判断主库-客观下线-能否自动切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提问-1主4从-5个哨兵-哨兵配置quorum为2-如果3个哨兵故障-当主库宕机时-哨兵能否判断主库-客观下线-能否自动切换"}},[v._v("#")]),v._v(" 提问：1主4从，5个哨兵，哨兵配置quorum为2，如果3个哨兵故障，当主库宕机时，哨兵能否判断主库“客观下线”？能否自动切换？")]),v._v(" "),s("p",[v._v("1、"),s("code",[v._v("哨兵集群可以判定主库“主观下线”")]),v._v("。由于"),s("code",[v._v("quorum=2")]),v._v("，所以当一个哨兵判断主库“主观下线”后，询问另外一个哨兵后也会得到同样的结果，2个哨兵都判定“主观下线”，达到了quorum的值，因此，哨兵集群可以判定主库为“客观下线”。")]),v._v(" "),s("p",[v._v("2、但哨兵不能完成主从切换。哨兵标记主库“客观下线后”，在选举“哨兵领导者”时，"),s("code",[v._v("一个哨兵必须拿到超过多数的选票(5/2+1=3票)")]),v._v("。"),s("code",[v._v("但目前只有2个哨兵活着")]),v._v("，无论怎么投票，一个哨兵最多只能拿到2票，永远无法达到多数选票的结果")])])}),[],!1,null,null,null);_.default=a.exports}}]);