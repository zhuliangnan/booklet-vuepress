(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{554:function(t,s,v){"use strict";v.r(s);var _=v(7),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"事务隔离-为什么你改了我还看不见"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离-为什么你改了我还看不见"}},[t._v("#")]),t._v(" 事务隔离：为什么你改了我还看不见？")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("事务支持是在引擎层实现的")])]),t._v(" "),v("h3",{attrs:{id:"事物的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事物的特点"}},[t._v("#")]),t._v(" 事物的特点")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("特性")]),t._v(" "),v("th",[t._v("作用")]),t._v(" "),v("th",[t._v("备注")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("原子性")]),t._v(" "),v("td",[t._v("保证并发操作")]),t._v(" "),v("td",[t._v("比如多个用户并发转账")])]),t._v(" "),v("tr",[v("td",[t._v("一致性")]),t._v(" "),v("td",[t._v("保证数据一致")]),t._v(" "),v("td",[t._v("转账前后两个账户的金额总和保持不变")])]),t._v(" "),v("tr",[v("td",[t._v("隔离性")]),t._v(" "),v("td",[t._v("保证并发事务独立执行，对数据库的影响和串行执行一致。")]),t._v(" "),v("td",[t._v("比如多个用户网一个账户转账，最后转账的结果也应该和他们按照先后次序转账的结果一样")])]),t._v(" "),v("tr",[v("td",[t._v("持久性")]),t._v(" "),v("td",[t._v("保证数据存储，任何事务或者系统故障都不会导致数据丢失")]),t._v(" "),v("td",[t._v("转账结果可保存")])])])]),t._v(" "),v("h3",{attrs:{id:"隔离性与隔离级别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#隔离性与隔离级别"}},[t._v("#")]),t._v(" 隔离性与隔离级别")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("读未提交")]),t._v(" ：读到其他事务未提交的数据的，即存在脏读问题")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("读已提交")]),t._v(" ：就是事务要等另一个事物提交后才能读取数据 解决脏读，但是有可能A事务没有提交，B事务就已经更改了并且提交了。会导致  不可重复读(针对的是更新)---同一事务内，不同的时刻读到的同一批数据可能是不一样的")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("可重复读(Mysql默认)")]),t._v("：就是在开始读取数据（事物开启）时，不再允许修改操作。但是可能会有会有幻读(针对的是新增)--A在修改，B插入了一条数据，A修改完在读取发现多了一条，好像出现幻觉")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("串行化")]),t._v(" ：将事务的执行变为顺序执行")])])]),t._v(" "),v("p",[t._v("配置的方式是，将启动参数 "),v("code",[t._v("transaction-isolation")]),t._v(" 的值设置成 READ-COMMITTED。")]),t._v(" "),v("p",[t._v("你可以用 "),v("code",[t._v("show variables")]),t._v(" 来查看当前的值。")]),t._v(" "),v("div",{staticClass:"language-sql extra-class"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[t._v("mysql"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" variables "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'transaction_isolation'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------+----------------+")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Variable_name "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Value")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------+----------------+")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" transaction_isolation "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMITTED")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------+----------------+")]),t._v("\n")])])]),v("p",[t._v("下面结合案例分析结果")]),t._v(" "),v("p",[t._v("假设数据表 T 中只有一列，其中一行的值为 1，下面是按照时间顺序执行两个事务的行为")]),t._v(" "),v("p",[v("img",{attrs:{src:"/mysql/base/7dea45932a6b722eb069d2264d0066f8.png",alt:"img"}})]),t._v(" "),v("ul",[v("li",[t._v("若隔离级别是“读未提交”， 则 V1 的值就是 2。这时候事务 B 虽然还没有提交，但是结果已经被 A 看到了。因此，V2、V3 也都是 2。")]),t._v(" "),v("li",[t._v("若隔离级别是“读提交”，则 V1 是 1，V2 的值是 2。事务 B 的更新在提交后才能被 A 看到。所以， V3 的值也是 2。")]),t._v(" "),v("li",[t._v("若隔离级别是“可重复读”，则 V1、V2 是 1，V3 是 2。之所以 V2 还是 1，遵循的就是这个要求：事务在执行期间看到的数据前后必须是一致的。")]),t._v(" "),v("li",[t._v("若隔离级别是“串行化”，则在事务 B 执行“将 1 改成 2”的时候，会被锁住。直到事务 A 提交后，事务 B 才可以继续执行。所以从 A 的角度看， V1、V2 值是 1，V3 的值是 2。.")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("在实现上，数据库里面会创建一个视图，访问的时候以视图的逻辑结果为准")]),t._v(" "),v("p",[v("code",[t._v("RC级别")]),t._v("下，MVCC视图会在"),v("code",[t._v("每一个语句前创建一个")]),t._v("，所以在RC级别下，"),v("code",[t._v("一个事务是可以看到另外一个事务已经提交的内容")]),t._v("，因为它在"),v("code",[t._v("每一次查询")]),t._v("之前"),v("code",[t._v("都会")]),t._v("重新"),v("code",[t._v("给予最新的数据创建一个新的MVCC视图")]),t._v("。")]),t._v(" "),v("p",[v("code",[t._v("RR级别")]),t._v("下，MVCC视图实在"),v("code",[t._v("开始事务的时候就创建好了")]),t._v("，这个"),v("code",[t._v("视图会一直使用")]),t._v("，直到该事务结束。 这里要注意不同的隔离级别他们的一致性事务视图创建的时间点是不同的。 RU：没有视图的概念，直接返回最小行数据。")]),t._v(" "),v("p",[t._v("RCRead Committed，读提交）：在每一行SQL语句执行的时候创建。 RR（Repeatable Read，可重复读）：在事务启动的时候创建。 Serial：通过锁来实现数据访问，没有视图的概念。")])]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),v("p",[t._v("注意:")]),t._v(" "),v("p",[t._v("在“"),v("code",[t._v("可重复读")]),t._v("”隔离级别下，这个视图是在"),v("code",[t._v("事务启动")]),t._v("时创建的，整个事务存在期间都用这个视图。")]),t._v(" "),v("p",[t._v("在“"),v("code",[t._v("读提交")]),t._v("”隔离级别下，这个视图是在每个 "),v("code",[t._v("SQL 语句开始执行")]),t._v("的时候创建的。")]),t._v(" "),v("p",[t._v("这里需要注意的是，“"),v("code",[t._v("读未提交")]),t._v("”隔离级别下"),v("code",[t._v("直接返回记录上的最新值")]),t._v("，"),v("code",[t._v("没有视图概念")]),t._v("；")]),t._v(" "),v("p",[t._v("而“串行化”"),v("code",[t._v("隔离级别")]),t._v("下直接用"),v("code",[t._v("加锁")]),t._v("的方式来避免并行访问。")])]),t._v(" "),v("h3",{attrs:{id:"事务隔离的实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离的实现"}},[t._v("#")]),t._v(" 事务隔离的实现")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),v("p",[t._v("在 MySQL 中，实际上除了"),v("code",[t._v("记录变更记录")]),t._v("，还会记录一条"),v("code",[t._v("变更相反")]),t._v("的"),v("code",[t._v("回滚操作记录")]),t._v("，前者记录在"),v("code",[t._v("redo log")]),t._v("，后者记录在"),v("code",[t._v("undo log")])])]),t._v(" "),v("p",[t._v("假设一个值从 1 被按顺序改成了 2、3、4，在回滚日志里面就会有类似下面的记录。")]),t._v(" "),v("p",[v("img",{attrs:{src:"/mysql/base/d9c313809e5ac148fc39feff532f0fee.png",alt:"img"}})]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("在T1时，开启事务A，读到1，对应read-view-A。 在T2时，事务a执行update，将1改成2；")]),t._v(" "),v("p",[t._v("在T3时，开启事务B，读到2，对应read-view-B。 在T4时，事务b执行update，将2改成3；")]),t._v(" "),v("p",[t._v("在T5时，事务c执行update，将3改成4； 在T6时，开启事务C，读到4，对应read-view-C。")]),t._v(" "),v("p",[t._v("所以 假如在T7时，有事务d将4改成5，都不会影响read-view-A，read-view-B，read-view-C。")]),t._v(" "),v("p",[t._v("这3个读视图分别"),v("code",[t._v("将当前值做相应的回滚操作得到")]),t._v("。 主要体现‘"),v("code",[t._v("可重复读")]),t._v("’的基本原理")])]),t._v(" "),v("p",[t._v("系统会判断，当没有事务再需要用到这些回滚日志时，"),v("code",[t._v("回滚日志会被删除")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("当没有比回滚日志更早的读视图（读视图在事务开启时创建）的时候，这个数据"),v("code",[t._v("不会再有谁驱使它回滚")]),t._v("了，这个回滚日志也就失去了用武之地，可以"),v("code",[t._v("删除")]),t._v("了")])]),t._v(" "),v("p",[t._v("所以请尽可能"),v("code",[t._v("不要使用长事务")]),t._v("， 长事务意味着系统里面会存在很老的事务视图。由于这些事务随时可能访问数据库里面的任何数据，所以这个事务提交之前，数据库里面它可能用到的回滚记录都必须保留，这就会导致大量占用存储空间。其次还会占用锁资源，也可能拖垮整个库。")]),t._v(" "),v("p",[t._v("长事务会带来哪些问题？")]),t._v(" "),v("ol",[v("li",[t._v("占有锁资源，可能拖垮整个库")]),t._v(" "),v("li",[t._v("长事务可能导致暂时需要保存很多undo log(回滚日志)，会占用内存空间。")])]),t._v(" "),v("h3",{attrs:{id:"事务的启动方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务的启动方式"}},[t._v("#")]),t._v(" 事务的启动方式")]),t._v(" "),v("ol",[v("li",[t._v("显式启动事务语句， "),v("code",[t._v("begin 或 start transaction")]),t._v("。配套的提交语句是 "),v("code",[t._v("commit")]),t._v("，回滚语句是 "),v("code",[t._v("rollback")]),t._v("。")]),t._v(" "),v("li",[v("code",[t._v("set autocommit=0")]),t._v("，这个命令会将这个"),v("code",[t._v("线程的自动提交关掉")]),t._v("。意味着如果你只执行一个 select 语句，这个事务就启动了，而且并"),v("code",[t._v("不会自动提交")]),t._v("。这个事务持续存在直到你"),v("code",[t._v("主动执行")]),t._v(" "),v("code",[t._v("commit 或 rollback 语句，或者断开连接")]),t._v("。")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("在没有显式开启事务(没begin 或 start transaction)的情况下，可认为每个sql的执行都算是一个事务，如果你不commit 那么它会一直存在从而变成长事务(就是说，你自己关闭了自动提交，然后一个select也会一直占用，从而变成长事务。")])]),t._v(" "),v("p",[t._v("因此，建议总是使用 "),v("code",[t._v("set autocommit=1")]),t._v(", 通过显式语句的方式来启动事务。")]),t._v(" "),v("h3",{attrs:{id:"事务查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务查询"}},[t._v("#")]),t._v(" 事务查询")]),t._v(" "),v("p",[t._v("你可以在 information_schema 库的 innodb_trx 这个表中查询长事务，比如下面这个语句，用于查找持续时间超过 60s 的事务。")]),t._v(" "),v("div",{staticClass:"language-sql extra-class"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" information_schema"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innodb_trx "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" TIME_TO_SEC"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timediff"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("trx_started"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);